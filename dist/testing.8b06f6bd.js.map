{"version":3,"sources":["testPages/testing.js"],"names":["question","document","getElementById","choices","Array","from","getElementsByClassName","progressText","showAnswerButton","nextQuestionButton","availableQuestions","acceptingAnswers","MAX_QUESTIONS","parseInt","localStorage","getItem","testScores","window","addEventListener","e","preventDefault","returnValue","fetch","then","res","json","loadedQuestions","questions","startTest","catch","err","console","error","questionCounter","scoreList","getNewQuestion","doNothing","answerStylingIncorrect","forEach","classList","remove","answerStylingCorrect","answerStylingRevealed","answerStylingSelected","explanationElement","innerText","innerHTML","questionIndex","Math","floor","random","length","currentQuestion","onclick","toggle","element","choice","number","dataset","setItem","explanation","splice","parentElement","buttonText","viewMyPerformance","RedirectToPerformance","location","href","selectedChoice","target","selectedAnswer","classToApply","answer","tagName","add","missedQuestionsDeserialized","JSON","parse","push","questionID","stringify","toString","testScoresDeserialized","testScoresKeys","Object","keys","lastKey","pop","lastTestNumber","replace","currentTestNumber","testScoresSerialized","showAnswer","correctChoice","String","style","visibility","modal","backDrop","revealModalButton","toggleModal"],"mappings":"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","file":"testing.8b06f6bd.js","sourceRoot":"..\\src\\app","sourcesContent":["const question = document.getElementById('question');\r\nconst choices = Array.from(document.getElementsByClassName('choice-text'));\r\nconst progressText = document.getElementById('progressText');\r\n\r\nconst showAnswerButton = document.getElementById('show-answer');\r\nconst nextQuestionButton = document.getElementById('next-question');\r\n\r\nlet availableQuestions = [];\r\nlet acceptingAnswers = true;\r\n\r\nconst MAX_QUESTIONS = parseInt(localStorage.getItem('testLength'));\r\n\r\n// Initialize or fetch the \"testScores\" object that holds all test score data\r\nlet testScores = {};\r\n\r\nwindow.addEventListener('beforeunload', function (e) {\r\n  if (localStorage.getItem('quizInProgress') === 'true') {\r\n    e.preventDefault();\r\n    e.returnValue = '';\r\n  }\r\n});\r\n\r\n// Fetch the questions from the \"/assets/questions.json\" file and store them in\r\n// \"questions\"\r\nfetch('../questions.json')\r\n  .then((res) => {\r\n    return res.json();\r\n  })\r\n\r\n  .then((loadedQuestions) => {\r\n    questions = loadedQuestions;\r\n    startTest();\r\n  })\r\n\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\nstartTest = () => {\r\n  questionCounter = 0;\r\n  availableQuestions = [...questions];\r\n  scoreList = [];\r\n  getNewQuestion();\r\n};\r\n\r\ndoNothing = () => {\r\n  return;\r\n};\r\n\r\ngetNewQuestion = () => {\r\n  // Remove any green/red styling from the previous question's answer\r\n  const answerStylingIncorrect = [\r\n    ...document.getElementsByClassName('incorrect'),\r\n  ];\r\n\r\n  answerStylingIncorrect.forEach((answerStylingIncorrect) => {\r\n    answerStylingIncorrect.classList.remove('incorrect');\r\n  });\r\n\r\n  const answerStylingCorrect = [...document.getElementsByClassName('correct')];\r\n\r\n  answerStylingCorrect.forEach((answerStylingCorrect) => {\r\n    answerStylingCorrect.classList.remove('correct');\r\n  });\r\n\r\n  const answerStylingRevealed = [\r\n    ...document.getElementsByClassName('button-revealed'),\r\n  ];\r\n\r\n  answerStylingRevealed.forEach((answerStylingRevealed) => {\r\n    answerStylingRevealed.classList.remove('button-revealed');\r\n  });\r\n\r\n  const answerStylingSelected = [\r\n    ...document.getElementsByClassName('button-selected'),\r\n  ];\r\n\r\n  answerStylingSelected.forEach((answerStylingSelected) => {\r\n    answerStylingSelected.classList.remove('button-selected');\r\n  });\r\n\r\n  // Hide any explanation stylings from the previous question.\r\n  explanationElement = document.getElementById('explanation');\r\n  explanationElement.innerText = '';\r\n\r\n  // Update the question counter (e.g. 1/3 --> 2/3)\r\n  questionCounter++;\r\n  progressText.innerHTML = `Question:\\u00A0 ${questionCounter}/${MAX_QUESTIONS}`;\r\n\r\n  // Fill in the question\r\n  const questionIndex = Math.floor(Math.random() * availableQuestions.length);\r\n  currentQuestion = availableQuestions[questionIndex];\r\n  question.innerText = currentQuestion.question;\r\n\r\n  // Disable the next question button.\r\n  nextQuestionButton.onclick = doNothing;\r\n  nextQuestionButton.classList.toggle('button');\r\n  nextQuestionButton.classList.toggle('button-disabled');\r\n\r\n  /* When on the last question, change the \"NEXT QUESTION\" button to a \r\n       \"VIEW PERFORMANCE\" performance button. */\r\n  if (questionCounter === MAX_QUESTIONS) {\r\n    // Change the button's text\r\n    var element = document.getElementById('next-question-text');\r\n    element.innerHTML = 'View Score';\r\n  }\r\n\r\n  // Fill in the answer options\r\n  choices.forEach((choice) => {\r\n    const number = choice.dataset['number'];\r\n    choice.innerText = currentQuestion['choice' + number];\r\n  });\r\n\r\n  // // Fill in the explanation\r\n  // explanation.innerText = currentQuestion.explanation;\r\n\r\n  // Send question explanation to local storage for later access in the \"ShowAnswer\"\r\n  // function.\r\n  localStorage.setItem('questionExplanation', currentQuestion.explanation);\r\n\r\n  // Remove the question from the list of available questions\r\n  availableQuestions.splice(questionIndex, 1);\r\n\r\n  // Allow the user to select answers\r\n  acceptingAnswers = true;\r\n};\r\n\r\nchoices.forEach((choice) => {\r\n  choice.parentElement.addEventListener('click', (e) => {\r\n    localStorage.setItem('quizInProgress', 'true');\r\n\r\n    // Prevent the user from selecting more than one answer\r\n    if (!acceptingAnswers) return;\r\n    acceptingAnswers = false;\r\n\r\n    // Enable the next question button unless we are on the last question.\r\n    buttonText = document.getElementById('next-question-text').innerHTML;\r\n    if (buttonText === 'View Score') {\r\n      nextQuestionButton.classList.toggle('button');\r\n      nextQuestionButton.classList.toggle('button-disabled');\r\n      const viewMyPerformance = document.getElementById('next-question');\r\n      viewMyPerformance.onclick = function RedirectToPerformance() {\r\n        localStorage.setItem('quizInProgress', 'false');\r\n        window.location.href = '../dashboard/dashboard.html';\r\n      };\r\n    } else {\r\n      nextQuestionButton.onclick = getNewQuestion;\r\n      nextQuestionButton.classList.toggle('button');\r\n      nextQuestionButton.classList.toggle('button-disabled');\r\n    }\r\n\r\n    // Get the data for the selected answer\r\n    const selectedChoice = e.target;\r\n    const selectedAnswer = selectedChoice.dataset['number'];\r\n\r\n    /* By default, make the user's selection incorrect; however, if the user\r\n           selected the correct answer, make the user's selection correct. */\r\n    let classToApply = 'incorrect';\r\n    if (selectedAnswer == currentQuestion.answer) {\r\n      classToApply = 'correct';\r\n    }\r\n\r\n    // Change the class element in the HTML for the parent element\r\n    if (e.target.tagName == 'P') {\r\n      selectedChoice.parentElement.classList.add(\r\n        classToApply,\r\n        'button-selected'\r\n      );\r\n    } else {\r\n      selectedChoice.classList.add(classToApply, 'button-selected');\r\n    }\r\n\r\n    // Store whether the user got the question right or wrong in local storage\r\n    if (classToApply === 'incorrect') {\r\n      if (localStorage.getItem('missedQuestions') !== null) {\r\n        let missedQuestionsDeserialized = JSON.parse(\r\n          localStorage.getItem('missedQuestions')\r\n        );\r\n        missedQuestionsDeserialized.push(currentQuestion.questionID);\r\n        localStorage.setItem(\r\n          'missedQuestions',\r\n          JSON.stringify(missedQuestionsDeserialized)\r\n        );\r\n      } else {\r\n        localStorage.setItem(\r\n          'missedQuestions',\r\n          '[\"' + currentQuestion.questionID.toString() + '\"]'\r\n        );\r\n      }\r\n    }\r\n\r\n    /* Append the user's results to the \"scoreList\": \"0\" if incorrect and \"1\" \r\n           if correct */\r\n    if (classToApply === 'correct') {\r\n      scoreList.push(1);\r\n    } else {\r\n      scoreList.push(0);\r\n    }\r\n\r\n    // Store the \"scoreList\" in local storage object after the test is complete\r\n    if (questionCounter === MAX_QUESTIONS) {\r\n      if (localStorage.getItem('testScores') !== null) {\r\n        /* Append the data from the most recent test into the \"testScores\" object\r\n                in local storage */\r\n        //   STEP 1: Deserialize the existing testScores object from local storage\r\n        let testScoresDeserialized = JSON.parse(\r\n          localStorage.getItem('testScores')\r\n        );\r\n\r\n        //   STEP 2: Determine the current test number\r\n        testScoresKeys = Object.keys(testScoresDeserialized);\r\n\r\n        lastKey = testScoresKeys.pop();\r\n\r\n        lastTestNumber = lastKey.replace('Quiz ', '');\r\n\r\n        currentTestNumber = parseInt(lastTestNumber) + 1;\r\n\r\n        //   STEP 3: Append the recent test score data to the deserialized object\r\n        testScoresDeserialized['Quiz ' + currentTestNumber.toString()] =\r\n          scoreList;\r\n\r\n        //   STEP 4: Re-serialize the object and put it back into local storage\r\n        let testScoresSerialized = JSON.stringify(testScoresDeserialized);\r\n        localStorage.setItem('testScores', testScoresSerialized);\r\n      } else {\r\n        // Add a key value pair to the \"testScores\" object (e.g. {test 1: [0, 1, 0]})\r\n        testScores['Quiz 1'] = scoreList;\r\n\r\n        // Add testScores to local storage\r\n        let testScoresSerialized = JSON.stringify(testScores);\r\n        localStorage.setItem('testScores', testScoresSerialized);\r\n      }\r\n    }\r\n    // Do not allow the user to select answers if they have already answered\r\n    acceptingAnswers = false;\r\n  });\r\n});\r\n\r\nfunction showAnswer() {\r\n  // Disable the \"SHOW ANSWER\" button if the user has not selected an answer.\r\n  if (acceptingAnswers) {\r\n    return;\r\n  }\r\n\r\n  // Add green highlighting to the correct answer.\r\n  correctChoice = document.getElementById(\r\n    'choice' + String(currentQuestion.answer)\r\n  );\r\n  correctChoice.classList.add('correct', 'button-revealed');\r\n\r\n  // // Make the answer explanation visable.\r\n\r\n  // Insert the HTML element\r\n  explanationElement = document.getElementById('explanation');\r\n  explanationElement.innerText = localStorage.getItem('questionExplanation');\r\n  document.getElementById('explanation').style.visibility = 'visible';\r\n}\r\n\r\nshowAnswerButton.onclick = showAnswer;\r\n\r\nconst modal = document.getElementById('modal');\r\nconst backDrop = document.getElementById('backdrop');\r\nconst revealModalButton = document.getElementById('show-answer');\r\n\r\nconst toggleModal = () => {\r\n  if (acceptingAnswers) {\r\n    modal.classList.toggle('visible');\r\n    backDrop.classList.toggle('visible');\r\n  } else {\r\n    return;\r\n  }\r\n};\r\n\r\nrevealModalButton.addEventListener('click', toggleModal);\r\nbackDrop.addEventListener('click', toggleModal);\r\n"]}